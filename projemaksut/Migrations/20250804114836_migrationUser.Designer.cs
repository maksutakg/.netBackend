// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace projemaksut.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250804114836_migrationUser")]
    partial class migrationUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Mahalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("mahalleler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ilce = "Beşiktaş",
                            Name = "Abbasağa"
                        },
                        new
                        {
                            Id = 2,
                            Ilce = "Beşiktaş",
                            Name = "Akat"
                        },
                        new
                        {
                            Id = 3,
                            Ilce = "Beşiktaş",
                            Name = "Arnavutköy"
                        },
                        new
                        {
                            Id = 4,
                            Ilce = "Beşiktaş",
                            Name = "Balmumcu"
                        },
                        new
                        {
                            Id = 5,
                            Ilce = "Beşiktaş",
                            Name = "Bebek"
                        },
                        new
                        {
                            Id = 6,
                            Ilce = "Beşiktaş",
                            Name = "Cihannüma"
                        },
                        new
                        {
                            Id = 7,
                            Ilce = "Beşiktaş",
                            Name = "Dikilitaş"
                        },
                        new
                        {
                            Id = 8,
                            Ilce = "Beşiktaş",
                            Name = "Etiler"
                        },
                        new
                        {
                            Id = 9,
                            Ilce = "Beşiktaş",
                            Name = "Gayrettepe"
                        },
                        new
                        {
                            Id = 10,
                            Ilce = "Beşiktaş",
                            Name = "Konaklar"
                        },
                        new
                        {
                            Id = 11,
                            Ilce = "Beşiktaş",
                            Name = "Kuruçeşme"
                        },
                        new
                        {
                            Id = 12,
                            Ilce = "Beşiktaş",
                            Name = "Kültür"
                        },
                        new
                        {
                            Id = 13,
                            Ilce = "Beşiktaş",
                            Name = "Levazım"
                        },
                        new
                        {
                            Id = 14,
                            Ilce = "Beşiktaş",
                            Name = "Levent"
                        },
                        new
                        {
                            Id = 15,
                            Ilce = "Beşiktaş",
                            Name = "Mecidiye"
                        },
                        new
                        {
                            Id = 16,
                            Ilce = "Beşiktaş",
                            Name = "Muradiye"
                        },
                        new
                        {
                            Id = 17,
                            Ilce = "Beşiktaş",
                            Name = "Nispetiye"
                        },
                        new
                        {
                            Id = 18,
                            Ilce = "Beşiktaş",
                            Name = "Ortaköy"
                        },
                        new
                        {
                            Id = 19,
                            Ilce = "Beşiktaş",
                            Name = "Sinanpaşa"
                        },
                        new
                        {
                            Id = 20,
                            Ilce = "Beşiktaş",
                            Name = "Türkali"
                        },
                        new
                        {
                            Id = 21,
                            Ilce = "Beşiktaş",
                            Name = "Ulus"
                        },
                        new
                        {
                            Id = 22,
                            Ilce = "Beşiktaş",
                            Name = "Vişnezade"
                        },
                        new
                        {
                            Id = 23,
                            Ilce = "Beşiktaş",
                            Name = "Yıldız"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MahalleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MahalleId");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.Note", b =>
                {
                    b.HasOne("Domain.Entities.Mahalle", "mahalle")
                        .WithMany("Notes")
                        .HasForeignKey("MahalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "user")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mahalle");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Entities.Mahalle", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
